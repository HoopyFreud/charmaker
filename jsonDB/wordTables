{
    "Desire":
    [
        "anarchy",
        "to burn it all down",
        "cash",
        "drugs",
        "enlightenment",
        "fame",
        "freedom",
        "fun",
        "justice",
        "love",
        "mayhem",
        "power over others",
        "revenge",
        "safety for loved ones",
        "to save the world",
        "to see others fail",
        "self-control",
        "self-transformation",
        "success",
        "to kill",
        "destruction",
        "revolution",
        "a way out",
        "self-sacrifice",
        "to make a mark",
        "change",
        "no one else to suffer as you did",
        "truth",
        "to try everything",
        "pleasure",
        "satisfaction"
    ],
    "Feature":
    [
        [
            "abundance of jewelry",
            "abundance of rings",
            "abundance of piercings",
            "abundance of bracelets",
            "abundance of amulets"
        ],
        "all monochrome",
        "artificial skin",
        "beastlike",
        "broken nose",
        "burn scars",
        "completely hairless",
        [
            "cosmetic gills",
            "cosmetic horns"
        ],
        "covered in tattoos",
        "customized voicebox",
        "disheveled look",
        "dollfaced",
        "dueling scars",
        "elaborate hairstyle",
        "enhanced cheekbones",
        "fluorescent veins",
        "forehead display",
        "giant RCD helmet rig",
        "glitterskin",
        "glowing respirator",
        [
            "grillz",
            "golden grillz",
            "diamond grillz"
        ],
        "headband",
        "heavy on the makeup",
        "holomorphed face",
        "interesting perfume",
        "lace trimmings",
        "laser branded",
        "lipless-just teeth",
        "mirror eyes",
        "more plastic than skin",
        "necrotic face",
        [
            "nonhuman features",
            "nonhuman ears",
            "nonhuman lips",
            "nonhuman nose",
            "nonhuman eyes"
        ],
        "palms covered in notes",
        "pattern overdose",
        "plenty of piercings",
        "radiant eyebrows",
        [
            "rainbow haircut",
            "aggressive haircut",
            "neon haircut"
        ],
        "ritual scarifications",
        "robotlike",
        "shoulder pads",
        "subdermal implants",
        "tons of jewelry",
        [
            "traditional jewelry",
            "traditional amulets",
            "traditional piercings"
        ],
        "translucent skin",
        "transparent wear",
        "unkempt hair",
        "unnatural eyes",
        "UV-inked face",
        "VIP lookalike",
        "war paints",
        "filed teeth",
        "synthetic mohawk",
        "impressive sideburns",
        "facial tattoos galore",
        "intricate braids",
        "studs and spikes everywhere",
        "non-moving cybernetic eyes"
    ],
    "Lender": 
    [
        "a crime syndicate",
        "an anonymous hacker collective",
        "your distant relative, a corrupt politician's assistant",
        "a gang run by your childhood bully",
        "an unknown benefactor signing their messages with YN",
        "a death cult run by a board member from a powerful corp",
        "a roadrunner clan who may request services and housing as long as the debt is unpaid",
        [
            "the owner of a seedy joint",
            "the owner of a seedy club",
            "the owner of a seedy dive bar"
        ],
        "a fixer with cops on their payroll",
        "someone you trust, hospitalized with increasing medical bills",
        "a semi-sentient AI cluster slowly building up its influence",
        "a small but extremely violent SecCorp",
        "an old friend who sold out to the corps and got rich",
        "a fence with a large collection of armed drones",
        "your regular dealer of illicit drug",
        "your regular arms and ammo dealer",
        "a pop-up pyramid scheme VIP cult",
        "a predatory Net bank hub",
        "a private military outfit raiding tomb towns",
        "a gambling den with layers upon layers of owners",
        "a debt buying corp; all guns and no scruples"
    ],
    "Name":
    [
        "Acid",
        "Ao",
        "Art",
        "Auro",
        "Aviz",
        "Awl",
        "Bell",
        "Bickie",
        "Blink",
        "Blå",
        "Bolt",
        "Bonus",
        "Case",
        "Cash",
        "Cee",
        "Chendu",
        "Cleo",
        "Click",
        "Clock",
        "Coil",
        "Colt",
        "Cord",
        "Dane",
        "Dhole",
        "Doze",
        "Duzi",
        "Dyn",
        "Eff'",
        "Eli",
        "Ember",
        "Evvie",
        "Extra",
        "Farady",
        "Fase",
        "Fhony",
        "Flick",
        "Fort",
        "Fu",
        "Fude",
        "Glam",
        "Glare",
        "Glitz",
        "Gon",
        "Gory",
        "Gul",
        "Hale",
        "Heeda",
        "Hira",
        "Hla",
        "Hunch",
        "Ia",
        "Iffy",
        "Imra",
        "Iota",
        "Ixa",
        "Ixy",
        "Izzy",
        "Jaw",
        "Jin",
        "Joi",
        "Jolt",
        "Jonis",
        "Juke",
        "Kap",
        "Kei",
        "Kell",
        "Key",
        "Khem",
        "Kho",
        "Kick",
        "Kira",
        "Klaire",
        "Kongh",
        "Lan",
        "Laz",
        "Lhamo",
        "Lith",
        "Lu",
        "Lude",
        "Lync",
        "Lönn",
        "Lüg",
        "M.ne",
        "Mach",
        "Mehr",
        "Memo",
        "Mille",
        "Mogh",
        "Mpho",
        "Nero",
        "Nillie",
        "Nimo",
        "Nui",
        "Nur",
        "Oa",
        "Odd",
        "Oggy",
        "Omeg",
        "Ower",
        "Parc",
        "Peo",
        "Phem",
        "Phine",
        "Phix",
        "Pluck",
        "Poll",
        "Qin",
        "Qollex",
        "Quinz",
        "Quiz",
        "Qwerty",
        "Rador",
        "Ran",
        "Reeve",
        "Riz",
        "Rush",
        "Räck",
        "Räd",
        "Sen",
        "Sero",
        "Shade",
        "Share",
        "Shill",
        "Shind",
        "Silk",
        "Soma",
        "Sonyx",
        "Soot",
        "Sopot",
        "Spark",
        "Spice",
        "Splince",
        "Switch",
        "Synx",
        "Sådd",
        "Tera",
        "Tesh",
        "Thiz",
        "Tick",
        "Tilt",
        "Track",
        "Twelve",
        "Uld",
        "Ulv",
        "Umbra",
        "Unit",
        "Uve",
        "Vac",
        "Valle",
        "Vic",
        "Viff",
        "Vild",
        "Vintro",
        "Vira",
        "Volley",
        "Volt",
        "Walsh",
        "Wick",
        "Wolve",
        "Xeer",
        "Xleo",
        "Xylph",
        "Yann",
        "Zalec",
        "Ze",
        "Zee",
        "Zenit",
        "Zign",
        "Zill",
        "Zo",
        "Zola",
        "Älder",
        "Ådra",
        "Ögat"
    ],
    "Obsession":
    [
        "adrenaline",
        "AI poetry",
        "ammonium chloride candy",
        "ancient grimoires",
        "arachnids",
        "belts",
        "blades",
        "bones",
        [
            "customized vehicles",
            "customized cars",
            "customized bikes",
            "customized scooters",
            "customized boots"
        ],
        "dronespotting",
        "experimental stimuli",
        "explosives",
        "extravagant manicure",
        "gauze and band-aids",
        "gin",
        "graffiti",
        "hand-pressed synthpresso",
        "handheld games",
        [
            "audio equipment",
            "headphones",
            "HiFi systems"
        ],
        [
            "sims",
            "history sims",
            "military sims",
            "conspiracy sims"
        ],
        "interactive holo-ink",
        "journaling",
        "masks",
        "medieval weaponry",
        "microbots",
        "mixing stimulants",
        "model mech kits",
        "obsolete tech",
        "porcelain figurines",
        "printed shirts",
        "puppets",
        "records",
        "recursive synthesizers",
        "shades",
        "slacklining",
        "sneakers",
        "stimsmokes",
        "style hopping",
        "tarot",
        "taxidermy",
        [
            "food",
            "trendy food",
            "artificial food"
        ],
        "urban exploring",
        "vampires vs. werewolves",
        "vintage army jackets",
        "vintage TV shows",
        "virtuaflicks",
        "virtuapals",
        "voice modulators",
        [
            "watches",
            "pocket watches"
        ],
        "wigs",
        "niche VIPs",
        "killmatch drama and storylines",
        "doomsday prepping",
        "cyberbikes",
        "self-aware AIs",
        "mechs",
        "police brutality",
        "fringe politics",
        "cybersecurity",
        "BASE jumping",
        "sludge diving",
        "gene splicing",
        "AI generated cartoons",
        [
            "cosplay",
            "illegal cosplay",
            "offensive cosplay"
        ],
        "symbolism",
        "werewolves vs. vampires",
        "adbusting",
        "craft moonshine",
        "the violet door",
        "rituals",
        "old-school books",
        "alien bacteria theories",
        "celebrity worship",
        "corp warfare",
        "cydroid parkour",
        "extreme weather",
        "fake revolutions",
        "G0 creepypasta",
        "Nano mysticism",
        "Net necromancy",
        "RCD eavesdropping",
        "sniper rifle trickshots",
        "sub-zero sports",
        "the incident",
        "the stock market",
        "virtual worlds"
    ],
    "Quirk":
    [
        "chainsmoker",
        "chews on hair",
        "compulsive swearing",
        "constantly watching holos",
        "coughs",
        "fiddles with jewelry",
        "flirty",
        "gestures a lot",
        "giggles inappropriately",
        "hat and shades, always",
        "itchy",
        "loudly chews gum",
        "must tag every location",
        "never looks anyone in the eye",
        "nosepicker",
        "rapid blinking",
        "reeks of lighter fluid",
        "scratches facial scar",
        "twitchy",
        "wheezes",
        "hood up, always",
        "heavy snuff user",
        "whistles during uncomfortable silences",
        "talks to yourself",
        "often repeats what others say",
        "criticizes everything",
        "annoying positivity",
        "new obsession every week",
        "always carries a paperback"
    ],
    "Style":
    [
        "A 0core",
        "An acid panda",
        "A beastie",
        "A bitcrusher",
        "A bloodsport",
        "A cadavercore",
        "A codefolk",
        "A converter",
        "A corpodrone",
        "A cosmopunk",
        "A cvlt",
        "A cybercrust",
        "A cyPop",
        "A daemonista",
        "A deathbloc",
        "A doomtroop",
        "A ghoul",
        "A glitchmode",
        "A goregrinder",
        "A gutterscum",
        "A hexcore",
        "A hype street",
        "A kill mode",
        "A meta",
        "A mimic",
        "A minimal",
        "A minotaur",
        "A mobwave",
        "A monsterwave",
        "A murdercore",
        "A necropop",
        "A neurotripper",
        "A nuFlesh",
        "A nuGoth",
        "A nuPrep",
        "An oceanwave",
        "An OG",
        "An old-school cyber",
        "An orbital",
        "A postlife",
        "A pyrocore",
        "A razormouth",
        "A retro metal",
        "A riot kid",
        "A robomode",
        "A roller bruiser",
        "A technoir",
        "A trad punk",
        "A wallgoth",
        "A waster",
        "A skinner",
        "A neomod",
        "A hatewave",
        "A humie",
        "A shifter",
        "A dicer",
        "A corpsepunk",
        "A lichwave",
        "A heavytech",
        "A slicer",
        "A techForce",
        "A cyAscethia",
        "A motowave",
        "A retro panda",
        "A cyfur",
        "A cypherwave",
        "A greenwave",
        "A goon troop",
        "A mechsurf"
    ],
    "PreFieldDesire":
    [
        "You desire",
        "You want",
        "You seek"
    ],
    "PreFieldObsession":
    [
          ". Latest obsession:",
          ". Recent obsession:",
          ". Current obsession:",
          ", and currently obsessed with",
          ", and currently obsessing over",
          ", and obsessed with",
          ", and obsessing over",
          ", and talks at length about",
          ", and can't stop talking about",
          ", and currently into",
          ", and very into",
          ", and overly interested in",
          ", and geeking out over",
          ", and can't stop obsessing over",
          ". Currently obsessed with",
          ". Currently obsessing over",
          ". Obsessed with",
          ". Obsessing over",
          ". Talks at length about",
          ". Can't stop talking about",
          ". Currently into",
          ". Very into",
          ". Overly interested in",
          ". Geeking out over",
          ". Can't stop obsessing over"
    ]
}