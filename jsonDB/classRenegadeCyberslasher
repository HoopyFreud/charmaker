{
    "Name": "Renegade Cyberslasher",
    "StrengthRoll": "3d6+1",
    "PresenceRoll": "3d6+1",
    "KnowledgeRoll": "3d6-2",
    "GlitchRoll": "1d3",
    "HPRoll": "1d10+_t",
    "StuffReplacement":
    {
        "Cyberdeck + Apps":
        {
            "RandomItem": 
            {
                "Name": "Random Cyberware",
                "RandomTable": "RandomCyberware",
                "Roll": "1d12"
            }
        },
        "Random Cyberware":
        {
            "RandomItem": 
            {
                "Name": "Random Cyberware",
                "RandomTable": "RandomCyberware",
                "Roll": "1d12"
            }
        },
        "Random Nano":
        {
            "RandomItem": 
            {
                "Name": "Random Cyberware",
                "RandomTable": "RandomCyberware",
                "Roll": "1d12"
            }
        }
    },
    "ClassStuff":
    [
        {
            "RandomItem": 
            {
                "Name": "Random Cyberware",
                "RandomTable": "RandomCyberware",
                "Roll": "1d12"
            }
        }
    ],
    "RandomClassStuffText": "Your trenchcoat mostly hides your:",
    "RandomClassStuff":
    {
        "1":
        {
            "Weapon":
            {
                "Name": "Ancient blade",
                "Description": "Has claimed 1,000 souls. Or so you say.",
                "Damage":
                {
                    "Damage": "1d8",
                    "Description": "If you are the first to strike in combat, you deal double damage.",
                    "FireMode": "melee"
                }
            }
        },
        "2":
        {
            "Weapon":
            {
                "Name": "Steelcutter chainsaw",
                "Description": "Absolutely not made for combat.",
                "Damage":
                {
                    "Damage": "1d8",
                    "Description": "When hitting for maximum damage, it gets stuck for d3 rounds, dealing damage automatically as long as it remains there.",
                    "FireMode": "melee"
                }
            }
        },
        "3":
        {
            "Weapon":
            {
                "Name": "Filament zweihänder",
                "Description": "Makes everyone around you nervous.",
                "Damage":
                {
                    "Damage": "1d10",
                    "Description": "Crits hit with such a force that your target is thrown up in the air, making them an easy target (-2DR) for anyone else.",
                    "FireMode": "melee"
                }
            }
        },
        "4":
        {
            "Weapon":
            {
                "Name": "Wire-wrapped baseball bat",
                "Description": "Hooked up to a battery.",
                "Damage":
                {
                    "Damage": "1d8",
                    "Description": "You can supercharge it, dealing +d4 damage to your target and to yourself.",
                    "FireMode": "melee"
                }
            }
        },
        "5":
        {
            "Cyberware":
            {
                "Name": "Dual Logans",
                "Description": "Make that sound when you pop 'em out.",
                "SubStuff":
                {
                    "Weapon":
                    {
                        "Name": "Dual Logans",
                        "Description": "Once per fight, you can surprise a victim by popping out feet claws as well, attacking at DR8.",
                        "Damage":
                        {
                            "Damage": "1d8",
                            "FireMode": "melee"
                        }
                    }
                }
            }
        },
        "6":
        {
            "Weapon":
            {
                "Name": "GodDAMN flail",
                "Description": "Spiked. Absolutely medieval.",
                "Damage":
                {
                    "Damage": "1d8",
                    "Description": "Crumples and shreds enemy armor a tier when you hit for 6+ damage.",
                    "FireMode": "melee"
                }
            }
        }
    },
    "ClassLore": "You are DEATH incarnate - a frenzied flurry of chrome, murder and blood-stained steel. But yours is no mindless rage. You match your trained and cybernetically enhanced body with an equally disciplined mind. You used to kill for a cause, for an ideal. Now? You kill for money",
    "RandomClassLorePrompt": "You try to start each day with",
    "RandomClassLore":
    [
        "doing yoga and meditating.",
        "chugging a mix of carefully selected and measured stimulants.",
        "assiduously minding your three favorite plants.",
        "obsessively laying out your clothes and cleaning your gear.",
        "doing a recreational blood transfusion.",
        "strengthening your inner daemon through a chaos magick ritual.",
        "calligraphy exercises.",
        "an intricate skincare routine."
    ]
}